name: Release

on:
  workflow_dispatch:
    inputs:
      release_api:
        type: boolean
        default: true
        description: Release mappie-api project
      release_compiler_plugin:
        type: boolean
        default: true
        description: Release compiler-plugin project
      release_maven_plugin:
        type: boolean
        default: true
        description: Release maven-plugin project
      release_gradle_plugin:
        type: boolean
        default: true
        description: Release gradle-plugin project

jobs:
  release:
    name: Release
    permissions:
      contents: write
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: temurin
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install GPG
        run: |
          cat <(echo -e "${{ secrets.MAVEN_CENTRAL_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Staging
        run: ./gradlew publish

      - name: JReleaser workaround
        run: mkdir -p build/jreleaser

      - name: Publish to Maven Central
        run: ./gradlew jreleaserFullRelease --no-configuration-cache
        env:
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.MAVEN_CENTRAL_GPG_SECRET_PASSWORD }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_API: ${{ inputs.release_api }}
          RELEASE_COMPILER_PLUGIN: ${{ inputs.release_compiler_plugin }}
          RELEASE_MAVEN_PLUGIN: ${{ inputs.release_maven_plugin }}
          RELEASE_GRADLE_PLUGIN: ${{ inputs.release_gradle_plugin }}

      - name: Publish to Gradle Plugin Portal
        if: inputs.release_gradle_plugin
        run: ./gradlew publishPlugins -Dgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Dgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}